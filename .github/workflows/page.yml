name: Build And Tests

on:
  # schedule this job every 1:45 AM everydays
  schedule:
    - cron: '45 1 * * *'
  pull_request:
    branches:
      - compiler # run when this branch pull requested
  push:
    branches:
      - compiler # run when this branch pushed

# cancel previous workflows, run only one workflow
concurrency:
  group: build-${{ github.event.push.number || github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  build:
    name: Build www.webmanajemen.com
    runs-on: ubuntu-latest
    env:
      NODE_OPTIONS: "--max_old_space_size=8192" #8192 4096 --expose-gc
    steps:
      - name: Checkout repository and submodules
        uses: actions/checkout@v2
        with:
          submodules: recursive
          token: "${{ secrets.GITHUB_TOKEN }}"
          persist-credentials: false # otherwise, the token used is the GITHUB_TOKEN, instead of your personal access token.
          fetch-depth: 0 # otherwise, there would be errors pushing refs to the destination repository.
      - name: Use Node.js 12.x
        uses: actions/setup-node@v1
        with:
          node-version: "12.x"
      - name: Get current date
        id: date
        run: echo "::set-output name=date::$(date +'%Y-%m-%dT%H:%M:%S')"
      - name: Setup GitHub
        run: |
          git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
      - name: Get npm cache directory
        id: npm-cache-dir
        run: echo "::set-output name=dir::$(npm config get cache)"
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn config get cacheFolder)"
      - name: Get Cache NPM dependencies
        id: npm-cache # use this to check for `cache-hit` ==> if: steps.npm-cache.outputs.cache-hit != 'true'
        uses: actions/cache@v2
        with:
          path: |
            ${{ steps.npm-cache-dir.outputs.dir }}
            ${{ steps.yarn-cache-dir-path.outputs.dir }}
            ./node_modules
            ~/.npm
            ./tmp
            ./build
          key: ${{ runner.os }}-nodejs-${{ hashFiles('**/package-lock.json') }}
          restore-keys: ${{ runner.os }}-nodejs-
      - run: npm i -g npm hexo-cli gulp-cli typescript ts-node
        # run global install when cache not found
        if: steps.npm-cache.outputs.cache-hit != 'true'
      - run: rm -rf node_modules tmp build
        # run if commit contains substring 'clean cache'
        if: "contains(github.event.head_commit.message, 'clean cache')"
      - run: npm install
      #- run: npm i hexo-seo hexo-blogger-xml hexo-adsense
      - run: cd themes/material && npm install
      - run: npx gulp article:copy
      - run: npx hexo clean
        # run if commit contains substring 'clean cache'
        if: "contains(github.event.head_commit.message, 'clean cache')"
      - run: |
          npx hexo generate
          git add .
          git commit -m "saved hexo database ${{ steps.date.outputs.date }}" -a
        # continue on error, prevent failing/exited
        continue-on-error: true
        id: hexo-g
      - run: cd docs/page && npm install
      - name: Userscripts
        if: steps.hexo-g.outcome == 'success' && steps.hexo-g.conclusion == 'success'
        run: |
          node userscripts/custom-domain.js
          node userscripts/copy.js
          node userscripts/after_generated.js
          node userscripts/validate.js

      - name: Commit Files
        id: git-commit
        if: ${{ false }}
        #if: steps.hexo-g.outcome == 'success' && steps.hexo-g.conclusion == 'success'
        run: git commit -m "Add changes ${{ steps.date.outputs.date }}" -a

      - name: Deploy ðŸš€
        if: steps.hexo-g.outcome == 'success' && steps.hexo-g.conclusion == 'success'
        uses: JamesIves/github-pages-deploy-action@4.1.4
        with:
          branch: master # The branch the action should deploy to.
          folder: docs # The folder the action should deploy.

      - name: Deploy to firebase
        # deploy if commit message contains firebase string
        if: "contains(github.event.head_commit.message, 'firebase') && steps.hexo-g.outcome == 'success' && steps.hexo-g.conclusion == 'success'"
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: "${{ secrets.GITHUB_TOKEN }}"
          firebaseServiceAccount: "${{ secrets.FIREBASE_SERVICE_ACCOUNT_ANDROID_008 }}"
          channelId: live
          projectId: android-008

      - name: Push changes
        if: ${{ false }}
        #if: steps.hexo-g.outcome == 'success' && steps.hexo-g.conclusion == 'success'
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ github.ref }}
          directory: build